import React, { useEffect, useState } from 'react';
import { ColumnsType } from 'antd/lib/table';
import useTable from '@shared/components/TableComponent/hook';
import { IModal } from '@view/Homepage/interface';
import { useAltaIntl } from '@shared/hook/useTranslate';
import RightMenu, { IArrayAction } from '@layout/RightMenu';
// import ModalComponents from '../MainModal/ModalHomepage';
import SearchComponent from '@shared/components/SearchComponent';
import TableComponent from '@shared/components/TableComponent';
import '../../style.scss';
import { Link } from 'react-router-dom';
import ExploitationContractPresenter from '@modules/exploitation-contract/presenter';

function ExploitationCard() {
  const { formatMessage } = useAltaIntl();
  const [search, setSearch] = useState<string>('');
  const [filter, setFilterOption] = useState<any>();

  const table = useTable();

  const [modal, setModal] = useState<IModal>({
    isVisible: false,
    dataEdit: null,
    isReadOnly: false,
  });

  const handleRefresh = () => {
    table.fetchData({ option: { search: search, filter: { ...filter } } });
  };

  const arrayAction: IArrayAction[] = [
    {
      iconType: 'add',
      handleAction: () => {
        setModal({ dataEdit: null, isVisible: true });
      },
    },
    { iconType: 'share' },
  ];

  useEffect(() => {
    table.fetchData({ option: { search: search, filter: { ...filter } } });
  }, [search, filter, table]);

  const idChooses = 'id'; //get your id here. Ex: accountId, userId,...

  //OK
  const columns: ColumnsType = [
    {
      dataIndex: 'number',
    },
    {
      dataIndex: 'client',
    },
    {
      dataIndex: 'date_created',
    },
    {
      dataIndex: 'effective_date',
    },
    {
      dataIndex: 'expiration_date',
      // render: (_item: any) =>
      //   _item ? (
      //     <div className="d-flex align-items-center">
      //       <EllipseIcon className="text-primary mr-1" />
      //       Còn thời hạn
      //     </div>
      //   ) : (
      //     <div>
      //       <EllipseIcon className="text-danger mr-1" />
      //       Đã huỷ
      //     </div>
      //   ),
    },
    {
      dataIndex: 'validity',
      // render: (_item: any, record: any) => (
      //   <div>{ new Date(record.date_created).toLocaleDateString('en-US') }</div>
      // ),
    },
    {
      dataIndex: 'none',
      render: (_item: any, record: any) =>
        record.validity ? (
          <div>
            <Link className='tag-link' to={'/detail-contract'}>Xem chi tiết</Link>
          </div>
        ) : (
          <div>
            <Link className='tag-link' to={'/detail-contract'}>Xem chi tiết</Link>
            <Link className='tag-link ml-2' to={'/reason-cancel-contract'}>Lý do hủy</Link>
          </div>
        ),
    },
  ];

  const handleSearch = (searchKey: string) => {
    setSearch(searchKey);
  };

  return (
    <div className="main-card">
      <div className="d-flex flex-row justify-content-md-between mb-3 align-items-end">
        <SearchComponent
          onSearch={handleSearch}
          placeholder={'Tên hợp đồng, tác giả....'}
          classNames="mb-0 search-table exploitation-contract"
        />
      </div>
      <TableComponent
        apiServices={ExploitationContractPresenter.getExploitationContracts}
        hasStt={true}
        defaultOption={filter}
        translateFirstKey="exploitation.contract"
        rowKey={record => record[idChooses]}
        // Filter
        register={table}
        columns={columns}
        // dataSource={dataTable}
        disableFirstCallApi={true}
        className="exploitation-contract"
      />

      <RightMenu arrayAction={arrayAction} />

    </div>
  );
}

export default ExploitationCard;
