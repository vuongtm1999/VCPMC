import { PaginationEntity } from '@core/pagination/entity';
import { collection, getDocs, orderBy, query, startAfter, where } from 'firebase/firestore';
import FirebaseConfig from '../FirebaseConfig';

const db = FirebaseConfig.fbDB;

export const getDatas = async (paging: any, option: any, collectionName: any): Promise<{ data: Array<any>; info: PaginationEntity }> => {

  const collecttion = collection(db, collectionName)

  const q = query(collecttion,
    orderBy('id'),
    startAfter((paging.current - 1) * paging.pageSize),
    where('id', '!=', ' '),
  );

  const docs = await getDocs(q);

  const data = await docs;

  let customdata: any = data.docs.map((d) => ({ ...d.data(), id: d.id }));

  if (option.search) {
    customdata = customdata.filter((item) => {
      const resultSearch = item.number.search(new RegExp(option.search, "i")) >= 0;
      return resultSearch;
      // return item.authorized_person.toLowerCase().indexOf(option.search.toLowerCase()) >= 0;
    });
  }

  return { data: customdata, info: { total: customdata.length } };
};

